{"version":3,"sources":["components/book/Book.js","components/book/BookList.js","components/bookDetail/CommentCreate.js","util.js","components/bookDetail/Comment.js","components/bookDetail/CommentDate.js","components/bookDetail/CommentList.js","components/bookDetail/Calendar.js","components/bookDetail/BookDetail.js","components/home/Home.js","serviceWorker.js","index.js"],"names":["Book","_this","this","react_default","a","createElement","className","Link","to","concat","props","id","onClick","onClickBook","title","author","Component","BookList","bookData","map","book","index","book_Book","key","CommentCreate","onCreateComment","autoGrow","element","style","height","scrollHeight","Comment","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","content","target","value","handleSave","state","length","alert","onSaveComment","edittable","handleKeyUp","comment","_this2","viewer","onEditComment","editor","onChange","onKeyUp","onFocus","autoFocus","onRemoveComment","CommentDate","view","date","empty","isExist","CommentList","bookDetail_CommentDate","commentData","el","i","bookDetail_Comment","commentId","bookDetail_CommentCreate","MyCalendar","es","showToday","showDateInput","onSelect","onSelectDay","BookDetail","handleSelectDay","day","str","JSON","stringify","substr","selectedDay","console","log","Date","Calendar","bookDetail_CommentList","Home","handleClickBook","selectedBookIndex","commentHandler","func","bookIndex","toConsumableArray","slice","handleCreateComment","handleRemoveComment","commentIndex","handleEditComment","handleSaveComment","Route","exact","path","render","book_BookList","bookDetail_BookDetail","Boolean","window","location","hostname","match","ReactDOM","HashRouter","home_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27de2ba0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Book extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <li className='book-wrapper'>\r\n        <Link to={`/detail/${this.props.id}`}>\r\n          <div className='book card' onClick={() => this.props.onClickBook(this.props.id)}>\r\n            <div className='card-body'>\r\n              <h3 className='book-title'>{this.props.title}</h3>\r\n              <p className='book-author'>{this.props.author}</p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\nclass BookList extends Component {\r\n\r\n  render() {\r\n    const mapToComponent = (data) => {\r\n      return data.map((book, index) => {\r\n        return (\r\n          <Book\r\n            id={index}\r\n            key={index}\r\n            title={book.title}\r\n            author={book.author}\r\n            onClickBook={this.props.onClickBook}\r\n          ></Book>\r\n          )   \r\n        }\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <div className='main-visual-wrapper'>\r\n          <div className='main-visual'>\r\n            <h1 className='main-logo'>갈피;</h1>\r\n            <p>매일매일 독서 일기장</p>\r\n          </div>\r\n        </div>\r\n        <div className='book-list-wrapper'>\r\n          <ul className='book-list'>\r\n            {mapToComponent(this.props.bookData)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookList;\r\n","import React, { Component } from 'react';\r\n// import { update } from 'immutability-helper';\r\n\r\nclass CommentCreate extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <li className='col-sm-4'>\r\n        <div className='comment comment-create'>\r\n          <button\r\n            className='btn btn-block btn-primary mx-auto'\r\n            onClick={this.props.onCreateComment}\r\n          >새로운 책갈피 추가</button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentCreate;\r\n","const getNow = () => {\r\n  const leadingZero = (num) => (num<10) ? '0'+num : num;\r\n  const now = new Date();\r\n  const year = now.getFullYear();\r\n  const month = leadingZero(now.getMonth()+1);\r\n  const date = leadingZero(now.getDate());\r\n  const hour = leadingZero(now.getHours());\r\n  const minute = leadingZero(now.getMinutes());\r\n\r\n  const whatDate = `${year}. ${month}. ${date}.`;\r\n  const whatTime = `${hour}:${minute}`;\r\n\r\n  return `${whatDate} ${whatTime}`;\r\n}\r\n\r\nconst autoGrow = (element) => {\r\n  element.style.height = '5px';\r\n  element.style.height = (element.scrollHeight)+'px';\r\n}\r\n\r\nexport {getNow, autoGrow};","import React, { Component } from 'react';\r\n\r\nimport {autoGrow} from '../../util';\r\n\r\nclass Comment extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: this.props.comment.content,\r\n      edittable: this.props.comment.edittable\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  }\r\n  handleSave = () => {\r\n    if (this.state.content.length < 1) {\r\n      alert('한 글자 이상 입력해주세요 :)')\r\n    } else {\r\n      this.props.onSaveComment({\r\n        content: this.state.content,\r\n        edittable: false\r\n      });\r\n    }\r\n  }\r\n\r\n  // textarea 자동 높이 조절\r\n  handleKeyUp = (e) => {\r\n    autoGrow(e);\r\n  }\r\n\r\n  render() {\r\n\r\n    const viewer = (\r\n      <div className='comment-content'>\r\n        <p onClick={this.props.onEditComment}>{this.props.comment.content}</p>\r\n      </div>\r\n    )\r\n    const editor = (\r\n      <div className='comment-editor'>\r\n        <textarea \r\n          className='form-control'\r\n          onChange={this.handleChange}\r\n          onKeyUp={(e) => this.handleKeyUp(e.target)}\r\n          onFocus={(e) => this.handleKeyUp(e.target)}\r\n          value={this.state.content}\r\n          autoFocus></textarea>\r\n        <button \r\n          className='btn btn-block btn-dark'\r\n          onClick={this.handleSave}\r\n          >저장</button>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <li className='col-sm-4'>\r\n        <div className='comment'>\r\n          {this.props.comment.edittable ? editor : viewer}\r\n          <div className='comment-menu clearfix'>\r\n            <button className='close' onClick={this.props.onRemoveComment}>\r\n              <span>&times;</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;","import React, { Component } from 'react';\r\n\r\nclass CommentDate extends Component {\r\n  \r\n  render() {\r\n\r\n    const view = (\r\n      <div className='comment-date'>\r\n        <p>{this.props.date}에 기록된 책갈피입니다.</p>\r\n      </div>\r\n    )\r\n\r\n    const empty = (\r\n      <div className='comment-date empty'>\r\n        <p>{this.props.date}의 책갈피가 아직 없습니다. 새로운 책갈피를 만드시겠어요?</p>\r\n      </div>\r\n    )\r\n    \r\n    return (\r\n      <div>\r\n        {this.props.isExist ? view : empty}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentDate;\r\n","import React, { Component } from 'react';\r\nimport CommentCreate from './CommentCreate';\r\nimport Comment from './Comment';\r\nimport CommentDate from './CommentDate';\r\n\r\nclass CommentList extends Component {\r\n\r\n  render() {\r\n    \r\n    const mapToComponent = (data) => {\r\n      return data.map((el, i) => {\r\n        return (\r\n          <Comment\r\n            comment={el}\r\n            key={i}\r\n            commentId={i}\r\n            onSaveComment={(comment) => this.props.onSaveComment(i, comment)}\r\n            onRemoveComment={() => this.props.onRemoveComment(i)}\r\n            onEditComment={() => this.props.onEditComment(i)}\r\n          ></Comment>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <CommentDate\r\n          date={this.props.date}\r\n          isExist={this.props.commentData.length > 0}\r\n        ></CommentDate>\r\n\r\n        <ul className='comment-container row'>\r\n          {mapToComponent(this.props.commentData)}\r\n          <CommentCreate \r\n            onCreateComment={this.props.onCreateComment}\r\n          ></CommentCreate>\r\n        </ul>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentList;","import React, { Component } from 'react'\r\nimport Calendar from 'rc-calendar'\r\nimport 'rc-calendar/assets/index.css'\r\n\r\nclass MyCalendar extends Component {\r\n\r\n  render(){\r\n    return (\r\n      <Calendar \r\n        showToday={false}\r\n        showDateInput={false}\r\n        onSelect={(date) => {this.props.onSelectDay(date)}}></Calendar>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default MyCalendar;\r\n","import React, { Component } from 'react';\r\nimport CommentList from './CommentList';\r\nimport MyCalendar from './Calendar';\r\n\r\nclass BookDetail extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDay: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      selectedDay: JSON.stringify(new Date()).substr(1, 10)\r\n    })\r\n  }\r\n\r\n  // 날짜 선택\r\n  handleSelectDay = (day) => {\r\n    // let year = day.getFullYear();\r\n    let str = JSON.stringify(day).substr(1, 10);\r\n    this.setState({\r\n      selectedDay: str\r\n    })\r\n    console.log(str)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='book-detail'>\r\n        <div className='book-info'>\r\n          <h3 className='book-info-title'>{this.props.bookData.title}</h3>\r\n          <p className='book-info-author'>{this.props.bookData.author}</p>\r\n          <div className='book-info-calendar'>\r\n            <MyCalendar\r\n              onSelectDay={this.handleSelectDay}></MyCalendar>\r\n          </div>\r\n        </div>\r\n        <div className='book-comment'>\r\n          <CommentList \r\n            date={this.state.selectedDay}\r\n            commentData={this.props.bookData.commentData}\r\n            onCreateComment={this.props.onCreateComment}\r\n            onRemoveComment={this.props.onRemoveComment}\r\n            onEditComment={this.props.onEditComment}\r\n            onSaveComment={this.props.onSaveComment}\r\n          ></CommentList>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default BookDetail;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport BookList from '../book/BookList';\r\nimport BookDetail from '../bookDetail/BookDetail'\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedBookIndex: null,\r\n      bookData : [\r\n        {\r\n          title: '위대한 개츠비', \r\n          author: 'F. 스콧 피츠제럴드', \r\n          commentData: []\r\n        },\r\n        {\r\n          title: '그리스인 조르바', \r\n          author: '니코스 카잔자키스', \r\n          commentData: []\r\n        },\r\n        {\r\n          title: '동물농장', \r\n          author: '조지 오웰', \r\n          commentData: []\r\n        },\r\n        {\r\n          title: '비행운', \r\n          author: '김애란', \r\n          commentData: []\r\n        },\r\n        {\r\n          title: '삼미 슈퍼스타즈의 마지막 팬클럽', \r\n          author: '박민규', \r\n          commentData: []\r\n        },\r\n        {\r\n          title: '내게 무해한 사람', \r\n          author: '최은영', \r\n          commentData: []\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleClickBook = (index) => {\r\n    this.setState({\r\n      selectedBookIndex: index\r\n    })\r\n  }\r\n\r\n  // 댓글 handler 함수\r\n  commentHandler = (func, bookData, bookIndex) => {\r\n    this.setState({\r\n      bookData: [\r\n        ...bookData.slice(0, bookIndex),\r\n        {\r\n          title: bookData[bookIndex].title,\r\n          author: bookData[bookIndex].author,\r\n          commentData: func(bookData[bookIndex].commentData)\r\n        },\r\n        ...bookData.slice(bookIndex+1, bookData.length)\r\n      ]\r\n    })\r\n  }\r\n  \r\n  // 댓글 추가\r\n  handleCreateComment = () => {\r\n    this.commentHandler((commentData) => {\r\n      return [\r\n        ...commentData,\r\n        {content: '', edittable: true}\r\n      ]\r\n    }, this.state.bookData, this.state.selectedBookIndex)\r\n  }\r\n  \r\n  // 댓글 삭제\r\n  handleRemoveComment = (commentIndex) => {\r\n    this.commentHandler((commentData) => {\r\n      return [\r\n        ...commentData.slice(0, commentIndex),\r\n        ...commentData.slice(commentIndex+1, commentData.length)\r\n      ]\r\n    }, this.state.bookData, this.state.selectedBookIndex)\r\n  }\r\n  \r\n  // 댓글 수정\r\n  handleEditComment = (commentIndex) => {\r\n    this.commentHandler((commentData) => {\r\n      return [\r\n        ...commentData.slice(0, commentIndex),\r\n        {content: commentData[commentIndex].content, edittable: true},\r\n        ...commentData.slice(commentIndex+1, commentData.length)\r\n      ]\r\n    }, this.state.bookData, this.state.selectedBookIndex)\r\n  }\r\n  \r\n  // 댓글 저장\r\n  handleSaveComment = (commentIndex, comment) => {\r\n    this.commentHandler((commentData) => {\r\n      return [\r\n        ...commentData.slice(0, commentIndex),\r\n        comment,\r\n        ...commentData.slice(commentIndex+1, commentData.length)\r\n      ]\r\n    }, this.state.bookData, this.state.selectedBookIndex)\r\n    console.log('saved!');\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        {/* <BookList \r\n              bookData={this.state.bookData}\r\n              onClickBook={this.handleClickBook}/> */}\r\n        <Route \r\n          exact path='/' \r\n          render={\r\n            () => {return <BookList \r\n              bookData={this.state.bookData}\r\n              onClickBook={this.handleClickBook}/>}}/>\r\n        <Route \r\n          path='/detail/:id' \r\n          render={\r\n            () => {return <BookDetail \r\n              bookData={this.state.bookData[this.state.selectedBookIndex]}\r\n              onCreateComment={this.handleCreateComment}\r\n              onRemoveComment={this.handleRemoveComment}\r\n              onEditComment={this.handleEditComment}\r\n              onSaveComment={this.handleSaveComment}/>}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Home from './components/home/Home';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../src/css/import.css'\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Home />\r\n  </Router>\r\n  , document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}