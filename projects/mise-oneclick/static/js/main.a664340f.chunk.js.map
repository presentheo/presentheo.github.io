{"version":3,"sources":["utils/index.js","components/Menu.js","components/Chart.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["getPm25Grade","value","undefined","MenuCover","styled","div","_templateObject","props","open","MenuList","ul","_templateObject2","MenuItem","li","_templateObject3","MenuItemTitle","h4","_templateObject4","MenuItemContent","_templateObject5","MenuItemValue","p","_templateObject6","Menu","_this","this","react_default","a","createElement","data","map","e","i","key","onClick","onClickCity","id","name","pm25","Badge","grade","onCloseMenu","Component","Container","Chart_templateObject","Value","Chart_templateObject2","ValueTime","h5","Chart_templateObject3","ValueBarBg","Chart_templateObject4","ValueBarFill","Chart_templateObject5","val","ValueBarValue","Chart_templateObject6","Chart","substr","city","LoadingBg","Loading_templateObject","LoadingImage","img","Loading_templateObject2","Loading","display","src","cityList","GlobalStyle","createGlobalStyle","App_templateObject","span","App_templateObject2","App_templateObject3","Content","App_templateObject4","ContentTitle","h1","App_templateObject5","Card","App_templateObject6","CardTitle","h2","_templateObject7","TableWrapper","_templateObject8","Table","table","_templateObject9","TableRow","tr","_templateObject10","Button","button","_templateObject11","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchRealtimeDatasToState","cityName","fetch","concat","encodeURI","then","res","json","setState","realtimeData","fetchInProgress","getCityData","obj","getCityDataList","reduce","acc","cur","push","objectSpread","state","hourlyData","handleClick","selectedCityId","selectedCityName","menuIsOpen","dailyData","_this2","_this3","className","dist","components_Loading","App_Container","components_Menu","alt","style","color","fontSize","marginTop","dataTime","styled_flexboxgrid_es","md","xs","components_Chart","stationName","pm25Value","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a664340f.chunk.js","sourcesContent":["  // 평균값 구하기\r\n  export const getAverage = (arr, key) => {\r\n    let result = arr.reduce((acc, cur) => {\r\n      if (cur[key] === '-'){\r\n        cur[key] = 0;\r\n      }\r\n      acc += cur[key]*1\r\n      return acc\r\n    }, 0)\r\n    result = Math.floor(result/arr.length);\r\n    return result\r\n  }\r\n\r\n  // 등급 구하기\r\n  export const getPm25Grade = (value) => {\r\n    if (value >= 0 && value <= 15){\r\n      return '좋음'\r\n    }else if (value >= 16 && value <= 35){\r\n      return '보통'\r\n    }else if (value >= 36 && value <= 75){\r\n      return '나쁨'\r\n    }else if (value >= 76){\r\n      return '매우나쁨'\r\n    }else if (value === '-' || value === undefined){\r\n      return '정보없음'\r\n    }\r\n  }\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getPm25Grade } from '../utils';\r\nimport { Badge } from '../App';\r\n\r\nconst MenuCover = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 5;\r\n  display: ${props => props.open ? 'block' : 'none'};\r\n`\r\nconst MenuList = styled.ul`\r\n  position: fixed;\r\n  height: 100%;\r\n  top: 0;\r\n  right: ${props => props.open ? '0px' : '-200px'};\r\n  overflow: auto;\r\n  min-width: 180px;\r\n  z-index: 6;\r\n  background-color: #fff;\r\n  box-shadow: -4px 0 12px rgba(0,0,0,0.4);\r\n  transition: right 0.4s ease;\r\n`\r\nconst MenuItem = styled.li`\r\n  padding: 15px 10px 15px 20px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  &:hover{\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst MenuItemTitle = styled.h4`\r\n  font-size: 2em;\r\n  font-weight: 100;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\nconst MenuItemContent = styled.div`\r\n  margin-left: 20px;\r\n  padding-left: 10px;\r\n  border-left: 1px solid #ddd;\r\n`\r\nconst MenuItemValue = styled.p`\r\n  font-size: 14px;\r\n  margin-bottom: 6px;\r\n`\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MenuList open={this.props.open}>\r\n          {this.props.data.map((e, i) => {\r\n            return (\r\n              <MenuItem\r\n              key={i}\r\n              onClick={() => this.props.onClickCity(e.id, e.name)}>\r\n                <MenuItemTitle>{e.name}</MenuItemTitle>\r\n                <MenuItemContent>\r\n                  <MenuItemValue>{e.pm25}㎍/m³</MenuItemValue>\r\n                  <Badge grade={getPm25Grade(e.pm25)}>{getPm25Grade(e.pm25)}</Badge>\r\n                </MenuItemContent>\r\n              </MenuItem>\r\n            )\r\n          })}\r\n        </MenuList>\r\n        <MenuCover open={this.props.open} onClick={this.props.onCloseMenu}></MenuCover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { getPm25Grade } from '../utils';\r\n\r\nconst Container = styled.ul`\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  max-width: 100%;\r\n  overflow:auto;\r\n`\r\nconst Value = styled.li`\r\n  width: 100%;\r\n  padding: 0 2px;\r\n  text-align: center;\r\n`\r\nconst ValueTime = styled.h5`\r\n  margin-bottom: 6px;\r\n  color: #aaa;\r\n`\r\nconst ValueBarBg = styled.div`\r\n  width: 100%;\r\n  height: 220px;\r\n  background-color: #fafafa;\r\n  border-radius: 5px 5px 0 0;\r\n  box-shadow: inset 2px 2px 4px rgba(0,0,0,0.1);\r\n  position: relative;\r\n`\r\nconst ValueBarFill = styled.div`\r\n  width: 100%;\r\n  height: ${props => props.val + '%'};\r\n  max-height: 100%;\r\n  min-height: 30px;\r\n  background-color: ${\r\n    props => {\r\n      let grade = getPm25Grade(props.val);\r\n      if (grade === '좋음'){\r\n        return 'royalblue'\r\n      }else if (grade === '보통'){\r\n        return 'green'\r\n      }else if (grade === '나쁨'){\r\n        return 'orange'\r\n      }else if (grade === '매우나쁨'){\r\n        return 'crimson'\r\n      }\r\n    }\r\n  };\r\n  position: absolute;\r\n  bottom: 0;\r\n  border-radius: 3px 3px 0 0;\r\n`\r\nconst ValueBarValue = styled.p`\r\n  margin-top: 8px;\r\n  color: #fff;\r\n`\r\n\r\nclass Chart extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.data.map((e,i) => {\r\n          return (\r\n            <Value key={i}>\r\n              <ValueTime>{e['dataTime'].substr(5)}</ValueTime>\r\n              <ValueBarBg>\r\n                <ValueBarFill val={e[this.props.city]}>\r\n                  <ValueBarValue>{e[this.props.city]}</ValueBarValue>\r\n                </ValueBarFill>\r\n              </ValueBarBg>\r\n            </Value>\r\n          )\r\n        })}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadingBg = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255,255,255,0.5);\r\n  z-index: 4;\r\n`\r\nconst LoadingImage = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <LoadingBg display={this.props.display}>\r\n        <LoadingImage src=\"https://presentheo.github.io/projects/mise-oneclick/images/loading.svg\"></LoadingImage>\r\n      </LoadingBg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\nimport styled, {createGlobalStyle} from 'styled-components';\nimport { Normalize } from 'styled-normalize';\nimport {Col, Row} from 'react-styled-flexboxgrid';\nimport Menu from './components/Menu';\nimport Chart from './components/Chart';\nimport Loading from './components/Loading';\nimport { getPm25Grade } from './utils';\n\nconst cityList = [\n  {id: 'seoul', name: '서울'},\n  {id: 'busan', name: '부산'},\n  {id: 'daegu', name: '대구'},\n  {id: 'incheon', name: '인천'},\n  {id: 'gwangju', name: '광주'},\n  {id: 'daejeon', name: '대전'},\n  {id: 'ulsan', name: '울산'},\n  {id: 'gyeonggi', name: '경기'},\n  {id: 'gangwon', name: '강원'},\n  {id: 'chungbuk', name: '충북'},\n  {id: 'chungnam', name: '충남'},\n  {id: 'jeonbuk', name: '전북'},\n  {id: 'jeonnam', name: '전남'},\n  {id: 'gyeongbuk', name: '경북'},\n  {id: 'gyeongnam', name: '경남'},\n  {id: 'jeju', name: '제주'},\n  {id: 'sejong', name: '세종'}\n]\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Noto+Sans+KR:100,400');\n  body{font-family: 'Noto Sans KR', sans-serif;}\n  h1,h2,h3,h4,h5{margin: 0; padding: 0;}\n  p{margin: 0; padding:0;}\n  ul{\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  .weak{font-weight: 100;}\n  div{box-sizing: border-box}\n\n  body::-webkit-scrollbar {\n    width: 8px;\n  }\n  body::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n  }\n \n  body::-webkit-scrollbar-thumb {\n    background-color: darkgrey;\n    outline: 1px solid slategrey;\n    border-radius: 5px;\n  }\n`\nexport const Badge = styled.span`\n  background-color: ${\n    props => {\n      let grade = props.grade;\n      if (grade === '좋음'){return 'blue'}\n      else if (grade === '보통'){return 'seagreen'}\n      else if (grade === '나쁨'){return 'orange'}\n      else if (grade === '매우나쁨'){return 'crimson'}\n      else if (grade === '정보없음'){return 'gray'}\n    }\n  };\n  padding: 2px 7px;\n  border-radius: 3px;\n  font-size: 12px;\n  color: #fff;\n`\nconst Container = styled.div`\n  display: flex;\n  background: ${\n    props => {\n      let grade = props.grade;\n      if (grade === '좋음'){return 'linear-gradient(270deg, skyblue, royalblue)'}\n      else if (grade === '보통'){return 'linear-gradient(270deg, limegreen, seagreen)'}\n      else if (grade === '나쁨'){return 'linear-gradient(270deg, khaki, orange)'}\n      else if (grade === '매우나쁨'){return 'linear-gradient(270deg, crimson, tomato)'}\n      else if (grade === '정보없음'){return 'linear-gradient(270deg, black, gray)'}\n    }\n  };\n  background-size: 400% 400%;\n  -webkit-animation: animatedGradient 10s ease infinite;\n  -moz-animation: animatedGradient 10s ease infinite;\n  animation: animatedGradient 10s ease infinite;\n\n  @-webkit-keyframes animatedGradient {\n      0%{background-position:0% 50%}\n      50%{background-position:100% 50%}\n      100%{background-position:0% 50%}\n  }\n  @-moz-keyframes animatedGradient {\n      0%{background-position:0% 50%}\n      50%{background-position:100% 50%}\n      100%{background-position:0% 50%}\n  }\n  @keyframes animatedGradient { \n      0%{background-position:0% 50%}\n      50%{background-position:100% 50%}\n      100%{background-position:0% 50%}\n  }\n`\nconst Content = styled.div`\n  width: 100%;\n  padding: 30px 40px 180px;\n  position: relative;\n  background-image: url('https://presentheo.github.io/projects/mise-oneclick/images/city.svg');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-attachment: fixed;\n  background-position: bottom;\n  @media (max-width: 768px){\n    margin: 0;\n    padding: 20px 20px 180px;\n  }\n`\nconst ContentTitle = styled.h1`\n  letter-spacing: -7px;\n  font-size: 5em;\n  color: #fff;\n  @media (max-width: 768px){\n    font-size: 2.4em;\n    letter-spacing: -3px;\n  }\n`\nconst Card = styled.div`\n  background-color: rgba(255,255,255,1);\n  border-radius: 12px;\n  box-shadow: 2px 3px 4px rgba(0,0,0,0.2);\n  padding: 20px;\n  margin-top: 20px;\n`\nconst CardTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #444;\n`\nconst TableWrapper = styled.div`\n  max-height: 600px;\n  overflow: auto;\n`\nconst Table = styled.table`\n  width: 100%;\n  border-spacing: 0;\n`\nconst TableRow = styled.tr`\n  & td, th{\n    padding: 8px 4px;\n    border-top: 1px solid #ddd;\n    text-align: left;\n    font-size: 14px;\n  }\n`\nconst Button = styled.button`\n  width: auto;\n  padding: 12px 20px;\n  background-color: #fff;\n  border: 0;\n  border-radius: 5px 0 0 5px;\n  position: absolute;\n  top: 30px;\n  right : 0px;\n  box-shadow: 0 0 8px rgba(0,0,0,0.3);\n  cursor: pointer;\n  font-weight: 800;\n  color: #444;\n  transition: padding-right 0.2s ease;\n  &:hover{\n    padding-right: 30px;\n  }\n  &>span{\n    display: inline-block;\n    vertical-align: middle;\n  }\n  &>img{\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    vertical-align: middle;\n    margin-right: 4px;\n  }\n  @media (max-width: 768px){\n    top: 10px;\n    padding: 8px 16px;\n    font-size: 12px;\n  }\n`\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fetchInProgress: true,\n      menuIsOpen: false,\n      selectedCityId: 'seoul',\n      selectedCityName: '서울',\n      realtimeData: [],\n      dailyData: [],\n      hourlyData: []\n    }\n  }\n\n  // 상태값 변경\n  fetchRealtimeDatasToState = (cityName) => {\n    fetch(`https://miseoneclick.herokuapp.com/realtime?city=${encodeURI(cityName)}`)\n    .then(res => res.json())\n    .then(json => {\n      this.setState({realtimeData: json['list']})\n      this.setState({fetchInProgress: false})\n    })\n  }\n  \n  // 앱 구동시 초기값\n  componentDidMount(){\n    this.fetchRealtimeDatasToState(this.state.selectedCityName);\n\n    fetch(`https://miseoneclick.herokuapp.com/hourly`)\n    .then(res => res.json())\n    .then(json => this.setState({hourlyData: json['list']}))\n    \n    fetch(`https://miseoneclick.herokuapp.com/daily`)\n    .then(res => res.json())\n    .then(json => this.setState({dailyData: json['list']}))\n  }\n\n  getCityData = (obj, value) => {\n    for (let key in obj){\n      if (key === value){\n        return obj[key]\n      }\n    }\n  }\n\n  getCityDataList = () => {\n    const cityData = cityList.reduce((acc, cur) => {\n      acc.push({\n        ...cur, \n        pm25: this.getCityData(this.state.hourlyData[0], cur.id)\n      })\n      return acc;\n    }, [])\n    return cityData;\n  }\n  \n  // 클릭시 변경\n  handleClick = (id, name) => {\n    this.setState({\n      fetchInProgress: true,\n      selectedCityId: id,\n      selectedCityName: name\n    });\n    this.fetchRealtimeDatasToState(name);\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Normalize/>\n        <GlobalStyle/>\n        {this.state.fetchInProgress ? <Loading/> : ''}\n        <Container grade={getPm25Grade(this.getCityData(this.state.hourlyData[0], this.state.selectedCityId))}>\n          <Menu\n            onCloseMenu={() => this.setState({menuIsOpen: false})}\n            open={this.state.menuIsOpen}\n            data={this.getCityDataList()}\n            onClickCity={this.handleClick}></Menu>\n          <Content>\n            <Button onClick={() => this.setState({menuIsOpen: !this.state.menuIsOpen})}>\n              <img src=\"https://presentheo.github.io/projects/mise-oneclick/images/menu.svg\" alt=\"left arrow\"></img><span> 다른 지역 확인</span>\n            </Button>\n            <ContentTitle>\n              <p>\n                <span className=\"weak\">지금 </span>\n                {this.state.selectedCityName}\n                <span className=\"weak\">의 </span>\n              </p>\n              <p>\n                미세먼지\n                <span className=\"weak\"> 농도는</span>\n              </p>\n              <p>\n                \"{getPm25Grade(this.getCityData(this.state.hourlyData[0], this.state.selectedCityId))}\" <span className=\"weak\">상태입니다.</span>\n              </p>\n            </ContentTitle>\n            <p style={{color: '#fff', fontSize: '16px', marginTop: '14px'}}>\n              ({this.state.hourlyData[0] ? this.state.hourlyData[0].dataTime : '0000-00-00 00:00'} 기준, {this.state.selectedCityName} 측정소 평균)\n            </p>\n            <Row>\n              <Col md={7} xs={12}>\n                <Card>\n                  <CardTitle>시간별 미세먼지 농도</CardTitle>\n                  <Chart\n                    data={this.state.hourlyData}\n                    city={this.state.selectedCityId}></Chart>\n                </Card>\n                <Card>\n                  <CardTitle>일간 미세먼지 농도</CardTitle>\n                  <Chart\n                    data={this.state.dailyData}\n                    city={this.state.selectedCityId}></Chart>\n                </Card>\n              </Col>\n              <Col md={5} xs={12}>\n                <Card>\n                  <CardTitle>측정소별 미세먼지 농도</CardTitle>\n                  <TableWrapper>\n                    <Table>\n                      <tbody>\n                      <TableRow>\n                        <th>측정소</th>\n                        <th>농도(㎍/m³)</th>\n                        <th>등급</th>\n                      </TableRow>\n                    {this.state.realtimeData.map((e, i) => {\n                      return (\n                        <TableRow key={i}>\n                          <td>{e.stationName}</td>\n                          <td>{e.pm25Value}</td>\n                          <td>\n                            <Badge grade={getPm25Grade(e.pm25Value)}>{getPm25Grade(e.pm25Value)}</Badge>\n                          </td>\n                        </TableRow>\n                      )\n                    })}</tbody></Table>\n                  </TableWrapper>\n                </Card>\n              </Col>\n            </Row>\n          </Content>\n        </Container>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}